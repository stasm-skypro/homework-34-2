services:
  postgres:
    image: postgres:17-alpine
    container_name: psgr
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
#    env_file:
#      - ./.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dbnet
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    links:
      - "postgres:db"
    networks:
      - dbnet
    depends_on:
      - postgres

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  web:
    build: .
    image: school
    container_name: school
    restart: always
    command: "python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env
    links:
      - "postgres:dbps"
    networks:
      - dbnet
    volumes:
      - .:/app
      - static_volume:/app/static
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis

  celery:
    build: .
    command: bash -c "python manage.py migrate && celery -A config worker --loglevel=info"
    working_dir: /app  # Указание рабочей директории
    volumes:
      - .:/app  # Монтируем всю текущую директорию в контейнер, потому что "selery" требует директорию "config".
    depends_on:
      - postgres
      - redis

networks:
  dbnet:
    driver: bridge

volumes:
  postgres-data:
  static_volume:
